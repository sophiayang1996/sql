Q：
Table: Spending

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| user_id     | int     |
| spend_date  | date    |
| platform    | enum    | 
| amount      | int     |
+-------------+---------+
The table logs the spendings history of users that make purchases from an online shopping website which has a desktop and a mobile application.
(user_id, spend_date, platform) is the primary key of this table.
The platform column is an ENUM type of ('desktop', 'mobile').
Write an SQL query to find the total number of users and the total amount spent using mobile only, desktop only and both mobile and desktop together for each date.

The query result format is in the following example:

Spending table:
+---------+------------+----------+--------+
| user_id | spend_date | platform | amount |
+---------+------------+----------+--------+
| 1       | 2019-07-01 | mobile   | 100    |
| 1       | 2019-07-01 | desktop  | 100    |
| 2       | 2019-07-01 | mobile   | 100    |
| 2       | 2019-07-02 | mobile   | 100    |
| 3       | 2019-07-01 | desktop  | 100    |
| 3       | 2019-07-02 | desktop  | 100    |
+---------+------------+----------+--------+

Result table:
+------------+----------+--------------+-------------+
| spend_date | platform | total_amount | total_users |
+------------+----------+--------------+-------------+
| 2019-07-01 | desktop  | 100          | 1           |
| 2019-07-01 | mobile   | 100          | 1           |
| 2019-07-01 | both     | 200          | 1           |
| 2019-07-02 | desktop  | 100          | 1           |
| 2019-07-02 | mobile   | 100          | 1           |
| 2019-07-02 | both     | 0            | 0           |
+------------+----------+--------------+-------------+ 
On 2019-07-01, user 1 purchased using both desktop and mobile, user 2 purchased using mobile only and user 3 purchased using desktop only.
On 2019-07-02, user 2 purchased using mobile only, user 3 purchased using desktop only and no one purchased using both platforms.


My Answer：
select d1.spend_date, d1.platform, ifnull(sum(amount),0) total_amount, ifnull(count(user_id),0) total_users
from (
    select user_id, spend_date, 
    (case when count(distinct platform) = 2 then "both" else platform end) platform, 
    sum(amount) amount
    from spending 
    group by user_id, spend_date)  d  
    right join(
        select spend_date,'desktop' platform
        from spending
        group by spend_date
        union 
        select spend_date, 'mobile' platform
        from spending
        group by spend_date
        union 
        select spend_date, 'both' platform
        from spending
        group by spend_date) d1
    on d.spend_date = d1.spend_date
    and d.platform = d1.platform
group by d1.spend_date, d1.platform


Points：
1.本体的核心是为了列转化，case when then else end， ifnull（exp，val），if（exp，a，b)，使用select添加新列 （字符串要加“”，否则时表示存在列数值）
2.注意的点是group by的时候要按照像输出的条数计算，以前错误的把platfrom放入group by里
3.子查询要有alias
4.难点在于用count distinct来计算集合关系
5.select添加列，只能同一default，不能赋予一个list（所以要用union）
